"""
3. Дано два ненульових числа. Знайти суму, різницю, добуток і частку їх квадратів.
7. За довжинами двох сторін деякого трикутника і кутом між ними знайти довжину третьої сторони і площу цього трикутника.
11. Знайти значення функції y=3x6+6x2+7 при даному значенні x.
15. Дано змінні A, B, C. Змінити їх значення, перемістивши вміст A в B, B - в C, C - в A, і вивести нові значення змінних A, B, C.
19. Знайти корені квадратного рівняння A · x2 + B · x + C = 0, заданого своїми коефіцієнтами A, B, C (A>0), якщо відомо, що дискримінант рівняння позитивний. Вивести спочатку менший, а потім більший із знайдених коренів. Коріння квадратного рівняння знаходяться за формулою x1, 2 =
(−B ± (D)1/2)/(2·A), де D - дискримінант, що дорівнює B2 − 4·A·C.
"""

import math

ST = ""
while(ST != "stop"):
    print("Выбери числом какую задачу запустить...\n Выбор: 3, 7, 11, 15, 19\n Если вы закончили проверку задач, выберите число 1")
    Number = int(input())
    if(Number == 1):
        exit(0)
    if(Number == 3):

        #Дано два ненульових числа. Знайти суму, різницю, добуток і частку їх квадратів.

        A = int(input("Введите первое число: "))
        while (A == 0):
            print("Ноль не подходит... Введите другое число: ")
            A = int(input())
        B = int(input("Введите второе число: "))
        while (B == 0):
            print("Ноль не подходит... Введите другое число: ")
            B = int(input())
        Sum = A + B
        Riz = A - B
        Dob = A * B
        CHkv = pow(A, 2) / pow(B, 2)
        print("Сумма числ: ", Sum, "\nРізниця числ: ", Riz, "\nДобуток: ", Dob, "\nЧастка квадратів: ", CHkv, "\n\n")
    if(Number == 7):

        # За довжинами двох сторін деякого трикутника і кутом між ними знайти довжину третьої сторони і площу цього трикутника.

        line1 = int(input("Введите первую сторону: "))
        while (line1 == 0):
            print("Ноль не подходит... Введите другое число: ")
            line1 = int(input())

        line2 = int(input("Введите вторую сторону: "))
        while (line2 == 0):
            print("Ноль не подходит... Введите другое число: ")
            line2 = int(input())

        angle = int(input("Введите угол между сторонами: "))
        while (angle == 0):
            print("Ноль не подходит... Введите другое число: ")
            angle = int(input())

        line3 = math.sqrt(pow(line1, 2) + pow(line2, 2) - 2 * line1 * line2 * math.cos(angle))

        print("Третья сторона равна: ", line3, "\n\n")
    if(Number == 11):
        # 11. Знайти значення функції y=3x6+6x2+7 при даному значенні x.
        X = int(input("Введите X число: "))
        Y = 3 * X * 6 + 6 * X * 2 + 7
        print("Резульат выражения: ", Y, "\n\n")
    if(Number == 15):
        # Дано змінні A, B, C. Змінити їх значення, перемістивши вміст A в B, B - в C, C - в A, і вивести нові значення змінних A, B, C.
        A = int(input("Введите A число: "))
        B = int(input("Введите B число: "))
        C = int(input("Введите C число: "))
        D = B
        B = A
        A = C
        C = D
        print(A, "\n")
        print(B, "\n")
        print(C, "\n\n")
    if(Number == 19):
        # Знайти корені квадратного рівняння A · x2 + B · x + C = 0, заданого своїми коефіцієнтами A, B, C (A>0), якщо відомо, що дискримінант рівняння позитивний.
        # Вивести спочатку менший, а потім більший із знайдених коренів. Коріння квадратного рівняння знаходяться за формулою x1, 2 =
        # (−B ± (D)1/2)/(2·A), де D - дискримінант, що дорівнює B2 − 4·A·C.
        A = int(input("Введите коефициент A: "))
        B = int(input("Введите коефициент B: "))
        C = int(input("Введите коефициент C: "))
        while (C > 0):
            print("Чисто должно быть отрицательным...Введите другое число: ")
            C = int(input())
        D = math.sqrt(pow(B, 2) - 4 * A * C)
        X1 = (-B + D) / (2 * A)
        X2 = (-B - D) / (2 * A)
        if(X1 > X2):
            print("Меньший корень уравнения: ", X2, "\nБольший корень уравнения:", X1, "\n\n")
        else:
            print("Меньший корень уравнения: ", X1, "\nБольший корень уравнения:", X2, "\n\n")